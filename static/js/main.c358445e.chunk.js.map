{"version":3,"sources":["post-logo.png","components/Home.js","components/Contact.js","components/Navbar.js","components/About.js","hoc/Rainbow.js","components/Post.js","actions/postsActions.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","posts","this","props","PostList","length","map","post","react_default","a","createElement","className","key","id","src","postlogo","Link","to","title","body","Component","connect","state","Contact","withRouter","Rainbow","WrappedComponent","Math","floor","random","Post","handleClick","e","_this","deletePost","history","push","onClick","ownProps","match","params","post_id","find","el","dispatch","type","addPost","App","BrowserRouter","basename","process","components_Navbar","Route","exact","path","component","About","Boolean","window","location","hostname","initialState","rootReducer","arguments","undefined","action","newPosts","filter","Object","objectSpread","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c358445e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/post-logo.6717559e.png\";","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport postlogo from '../post-logo.png'\nimport {connect} from 'react-redux';\n\nclass Home extends Component{\n\n    render(){\n        const { posts } = this.props;\n        const PostList = posts.length ? (\n            posts.map( post =>{\n                return(\n                    <div className=\"post card\" key = {post.id}>\n                    <img src={postlogo}/>\n                        <div className=\"card-content\">\n                            <Link to = { \"/post/\" + post.id }>\n                                <span className=\"card-title red-text\">{post.title}</span>\n                            </Link>\n                            <p>{post.body}</p>\n                        </div>\n                    </div>\n                )\n            })\n        ) : (\n            <div className=\"center\"> <h4>No Post yet</h4></div>\n        )\n        \n        return(\n            <div className =\"container home\">\n                <h4 className = \"center\"> Home </h4>    \n                {PostList}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        posts: state.posts,\n    }\n}\n\nexport default connect(mapStateToProps)(Home);","import React from 'react';\n\nconst Contact = (props) => {\n    return(\n    <div className =\"container\">\n        <h4 className = \"center\"> Concact </h4>    \n        <p>Irure dolor labore mollit officia ad sunt ea deserunt exercitation id. Amet sint et nulla sit elit ipsum anim consequat. Veniam dolor fugiat veniam esse do incididunt dolore commodo mollit commodo veniam ea dolor. Id est sint enim eu duis quis minim non ad consectetur. Nisi laborum amet mollit eu laborum adipisicing eu irure non eu adipisicing. Enim magna amet dolor et culpa tempor proident anim. Pariatur consequat nulla reprehenderit ea.</p>\n    </div>\n    )\n}\n\n\nexport default Contact;","import React from 'react';\nimport {Link, NavLink, withRouter} from 'react-router-dom';\n\nconst Navbar = (props) => \n{\n    return(\n        <nav className = \"nav-wrapper red darken-3\">\n        <div className=\"container\">\n            <a className = \"brand-logo\"> Posts</a>\n            <ul className =\"right\">\n                <li><Link to=\"/\" >Home</Link></li>\n                <li><Link to=\"/about\" >About</Link></li>\n                <li><Link to=\"/contact\" >Contact</Link></li>\n            </ul>\n        </div>\n    </nav>\n    )\n}\n\n\nexport default withRouter(Navbar);","import React from 'react';\nimport Rainbow from '../hoc/Rainbow'\n\nconst About = () => \n    <div className =\"container\">\n        <h4 className = \"center\"> About </h4>    \n        <p>Irure dolor labore mollit officia ad sunt ea deserunt exercitation id. Amet sint et nulla sit elit ipsum anim consequat. Veniam dolor fugiat veniam esse do incididunt dolore commodo mollit commodo veniam ea dolor. Id est sint enim eu duis quis minim non ad consectetur. Nisi laborum amet mollit eu laborum adipisicing eu irure non eu adipisicing. Enim magna amet dolor et culpa tempor proident anim. Pariatur consequat nulla reprehenderit ea.</p>\n    </div>\n\nexport default  Rainbow(About);","import React from 'react';\n\nconst Rainbow = (WrappedComponent) =>{\n    const colours = ['red','yellow','blue','pink','purple','green'];\n    const randomColour = colours[ Math.floor(Math.random() * 5) ];\n    //console.log(randomColour)\n    const className = randomColour + '-text';\n\n    // Return a functional component \n    return (props) => {\n        return (\n            <div className = {className}>\n                <WrappedComponent { ...props }/>\n            </div>\n        )\n    }\n}\n\nexport default Rainbow;","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport {deletePost} from '../actions/postsActions';\n\nclass Post extends Component {\n\n    handleClick = (e) => {\n        this.props.deletePost(this.props.post.id);\n        this.props.history.push('/');\n    }\n\n    render(){\n        const post = this.props.post ? (\n            <div className=\"post\">\n                <h4 className=\"center\"> {this.props.post.title}</h4>\n                <p>{this.props.post.body}</p>\n                <div className=\"center\">\n                <button className=\"btn grey\" onClick = {this.handleClick}>Delete Post</button>\n                </div>\n            </div>\n        ) : (\n            <div className=\"center\"> Loading Post...</div>\n        )\n\n        return(\n            <div className=\"container\">\n                {post}\n            </div>\n        )\n    }\n    \n}\n\n// Mapping State to components props\nconst mapSateToProps = (state, ownProps) => {\n    let id = ownProps.match.params.post_id;\n    return {\n        post: state.posts.find(el => el.id == id)\n    }\n}\n\n// Mapping Dispatch  to components props\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        deletePost: (id) => { dispatch(deletePost(id))},\n        addPost : (title, body) => {dispatch(title, body)}\n    }\n}\n\n// The HOC connect attach properties to the component, for instance state and dispatchs\nexport default connect(mapSateToProps, mapDispatchToProps)(Post);","\nexport const deletePost = (id) => {\n    return {\n        type: \"DELETE_POST\",\n        id\n    }\n}\n\nexport const addPost = (title, body) => {\n    return{\n        type:\"ADD_POST\",\n        title, \n        body\n    }\n}\n\n","import React, { Component } from 'react';\nimport {Home, About, Contact, Navbar, Post } from './components'\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <div className=\"App\">\n          <Navbar/>\n            <Route  exact path = \"/\" component = {Home} />\n            <Route  path = \"/about\" component = {About} />\n            <Route  path = \"/contact\" component = {Contact} />\n            <Route  path = \"/post/:post_id\" component = {Post} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    posts: [\n      {\n        id: 1,\n        title: \" How to be a superhero\",\n        body:\n          \"Lorem ipsum dolor sit amet consectetur adipiscing elit sem, ligula porta mi ad etiam accumsan lectus rhoncus semper, parturient habitasse nostra est augue curabitur bibendum.\"\n      },\n      {\n        id: 2,\n        title: \" How to turn  the water into wine \",\n        body:\n          \"Lorem ipsum dolor sit amet consectetur adipiscing elit sem, ligula porta mi ad etiam accumsan lectus rhoncus semper, parturient habitasse nostra est augue curabitur bibendum.\"\n      },\n      {\n        id: 3,\n        title: \" How return to the past\",\n        body:\n          \"Lorem ipsum dolor sit amet consectetur adipiscing elit sem, ligula porta mi ad etiam accumsan lectus rhoncus semper, parturient habitasse nostra est augue curabitur bibendum.\"\n      }\n    ]\n  };\n\nconst rootReducer = (state = initialState, action) => {\n  if(action.type == 'DELETE_POST'){\n    // Return all post with differt id \n    const newPosts = state.posts.filter( post => post.id !== action.id)\n    return {\n      ...state,\n      posts : newPosts,\n    }\n  }\n  return state;\n}\n\nexport default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\n\n\n// Creating store\nconst store = createStore(rootReducer);\n\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>\n    ,document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}